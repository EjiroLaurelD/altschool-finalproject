name: Terraform Validation
env:
  AWS_BUCKET_KEY: ${{ secrets.AWS_BUCKET_KEY }}
  S3_BACKEND_BUCKET: ${{secrets.AWS_STATE_BUCKET_NAME}}
  AWS_REGION: ${{secrets.AWS_REGION}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}

on:
  push:
    branches:
      - test
  pull_request:
    branches: ['test']
    # paths: ['./terraform/*']
jobs:
  terraform_validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          terraform_wrapper: false

      - name: Install helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add stable https://charts.helm.sh/stable
      
      - name: Terraform update modules
        run: terraform get -update

      - name: Terraform init, format and validate
        run: |
          echo "** Running Terraform Init **"
          terraform init \
            -backend-config="bucket=${{env.S3_BACKEND_BUCKET}}" \
            -backend-config="key=${{env.AWS_BUCKET_KEY}}"
          echo "** Runing Terraform Format Check **"
          terraform fmt 
          
          echo " Running Terraform Validate"
          terraform validate
          
      - name: Terraform plan
        run: | 
          echo "Running Terraform Plan"
          terraform plan -var 'aws_secret_key=${{env.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{env.AWS_ACCESS_KEY}}'

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve -var 'aws_secret_key=${{env.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{env.AWS_ACCESS_KEY}}'    

      - name: Use Terraform output in github
        run: echo $(terraform output cluster_name)     