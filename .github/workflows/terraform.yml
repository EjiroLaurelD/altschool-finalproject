name: Terraform Validation
env:
  AWS_BUCKET_KEY: ${{ secrets.AWS_BUCKET_KEY }}
  S3_BACKEND_BUCKET: ${{secrets.AWS_STATE_BUCKET_NAME}}
  AWS_REGION: ${{secrets.AWS_REGION}}
  AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}

on:
  push:
    branches: ['test']
    # paths: ['./terraform/*','.github/workflows/terraform.yml']
  pull_request:
    branches: ['test']
    # paths: ['./terraform/*','.github/workflows/terraform.yml']
jobs:
  terraform_validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          terraform_wrapper: false
      - name: Terraform update modules
        run: terraform get -update
      - name: Terraform init, format and validate
        run: |
          echo "** Running Terraform Init **"
          terraform init \
            -backend-config="bucket=${{env.S3_BACKEND_BUCKET}}" \
            -backend-config="key=${{env.AWS_BUCKET_KEY}}"
          echo "** Runing Terraform Format Check **"
          terraform fmt  
          echo " Running Terraform Validate"
          terraform validate
      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve -var 'aws_secret_key=${{env.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{env.AWS_ACCESS_KEY}}'
      # - name: Terraform plan
      #   run: | 
      #     echo "Running Terraform Plan"
      #     terraform plan -var 'aws_secret_key=${{env.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{env.AWS_ACCESS_KEY}}'
      # - name: Terraform Apply
      #   run: |
      #     terraform apply -auto-approve -var 'aws_secret_key=${{env.AWS_SECRET_ACCESS_KEY}}' -var 'aws_access_key=${{env.AWS_ACCESS_KEY}}'

  eks_setup:
    needs: terraform_validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      # - name: DELETE Monitoring and hipster namespace
      #   run: |
      #     aws eks update-kubeconfig --name group-17-eks --region ${{ env.AWS_REGION }}
      #     kubectl delete namespace monitoring
      #     kubectl delete namespace hipster-shop
      #     kubectl delete namespace ingress-nginx

      # - name: Install helm
      #   run: |
      #     curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
      #     chmod 700 get_helm.sh
      #     ./get_helm.sh
      #     helm repo add grafana https://grafana.github.io/helm-charts
      #     helm repo add stable https://charts.helm.sh/stable
      # - name: Install Kube-prometheus-stack
      #   run: |
      #     aws eks update-kubeconfig --name group-17-eks --region ${{ env.AWS_REGION }}
      #     helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      #     helm repo update
      #     helm upgrade --force -i kube-prometheus-stack prometheus-community/kube-prometheus-stack \
      #     --namespace monitoring --create-namespace --timeout 20m30s 
      # - name: Install Cert Manager
      #   run: |
      #     aws eks update-kubeconfig --name group-17-eks --region ${{ env.AWS_REGION }}
      #     helm repo add jetstack https://charts.jetstack.io
      #     helm upgrade --force -i cert-manager jetstack/cert-manager \
      #       --namespace cert-manager --create-namespace \
      #       --version v1.11.0 \
      #       --set installCRDs=true --timeout 20m30s
      # - name: Install Ngnix Controller
      #   run: |
      #     aws eks update-kubeconfig --name group-17-eks --region ${{ env.AWS_REGION }}
      #     helm repo add nginx-stable https://helm.nginx.com/stable
      #     helm repo update
      #     helm upgrade --force -i ingress-nginx ingress-nginx \
      #       --repo https://kubernetes.github.io/ingress-nginx \
      #       --namespace ingress-nginx --create-namespace \
      #       --set controller.metrics.enabled=true --timeout 20m30s
      #     kubectl get services -n ingress-nginx
      # - name: Deploy Monitoring Yaml
      #   run: |
      #     output=$(terraform output cluster_name)
      #     aws eks update-kubeconfig --name group-17-eks --region ${{ env.AWS_REGION }}
      #     kubectl apply -f monitoring_manifest 
      # - name: Deploy Hipster Shop 
      #   working-directory: ./deploy_manifest
      #   run: |
      #     output=$(terraform output cluster_name)
      #     aws eks update-kubeconfig --name group-17-eks --region ${{ env.AWS_REGION }}
      #     kubectl apply -f hipster_shop_deploy.yml
      #     kubectl apply -f ingress.yml
                 

      # kubectl apply -f cert_issue.yaml
 